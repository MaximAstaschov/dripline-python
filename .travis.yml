language: cpp

stages:
- name: Test
  if: >
      ( branch IN (main, develop) OR 
        branch =~ /.*\.(?i:build)$/ ) OR 
      type = pull_request 
- name: Images
  if: >
      (branch IN (main, develop) OR
       branch =~ /^v\d+\.\d+\.\d+(-S*)?$/) AND
      type = push AND
      NOT type = pull_request
- name: Documentation
  if: >
      (branch IN (main, develop) OR
       branch =~ /^v\d+\.\d+\.\d+(-S*)?$/) AND
      type = push AND
      NOT type = pull_request
# Removed these two conditions for build-images on 12/22/20 (NSO):
#    branch =~ /.*\.(?i:build)$/ OR 
#    type = pull_request OR 

env:
- DOCKER_CLI_EXPERIMENTAL=enabled BASE_IMAGE_TAG="3.7"

#TODO: build but don't push the docker images in the test stage

jobs:
  include:
  ## build images
  - stage: Images
    name: all archs
    os: linux
    dist: focal
    sudo: required
    addons:
      apt:
        sources:
        - sourceline: "deb https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        packages:
        - qemu-user-static
        - docker-ce
        - docker-ce-cli
        - containerd.io
    before_install:
    - echo '{experimental":"enabled"}' | sudo tee /etc/docker/daemon.json
    - mkdir -p $HOME/.docker
    - echo '{"experimental":"enabled"}' | sudo tee $HOME/.docker/config.json
    - sudo service docker start
    install:
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --name xbuilder --use
    - docker buildx ls
    script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - >
      docker buildx build --push --progress plain 
      --platform=linux/arm/v7,linux/arm64,linux/amd64 
      --build-arg img_user=driplineorg
      --build-arg img_repo=dripline-cpp 
      --build-arg img_tag=v2.6.3
      --tag driplineorg/dripline-python:$(echo ${TRAVIS_BRANCH} | tr /: _) .
  - stage: Images
    name: all archs dev
    os: linux
    dist: focal
    sudo: required
    addons:
      apt:
        sources:
        - sourceline: "deb https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        packages:
        - qemu-user-static
        - docker-ce
        - docker-ce-cli
        - containerd.io
    before_install:
    - echo '{experimental":"enabled"}' | sudo tee /etc/docker/daemon.json
    - mkdir -p $HOME/.docker
    - echo '{"experimental":"enabled"}' | sudo tee $HOME/.docker/config.json
    - sudo service docker start
    install:
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --name xbuilder --use
    - docker buildx ls
    script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - >
      docker buildx build --push --progress plain 
      --platform=linux/arm/v7,linux/arm64,linux/amd64 
      --build-arg img_user=driplineorg
      --build-arg img_repo=dripline-cpp
      --build-arg img_tag=v2.6.3-dev
      --tag driplineorg/dripline-python:$(echo ${TRAVIS_BRANCH} | tr /: _)-dev .
  ## build docs
  - stage: Documentation
    language: python
    os: linux
    dist: bionic
    git:
      depth: false
    before_install:
    - openssl aes-256-cbc -K $encrypted_ef08ab9a7293_key -iv $encrypted_ef08ab9a7293_iv
      -in .deploy_key.enc -out .deploy_key -d
    - eval "$(ssh-agent -s)"
    - chmod 600 ./.deploy_key
    - ssh-add ./.deploy_key
    script: .travis/build_docs.sh
